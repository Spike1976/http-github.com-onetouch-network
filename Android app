Here is the implementation of an Android app that securely stores all data locally using SQLite. The app allows users to add, view, and delete data directly from their Android device.


---

File Structure

LocalStorageApp/
├── app/
│   ├── src/
│   │   ├── main/
│   │   │   ├── java/com/example/localstorageapp/
│   │   │   │   ├── MainActivity.java          # Main entry point
│   │   │   │   ├── DataAdapter.java           # RecyclerView adapter
│   │   │   │   ├── DatabaseHelper.java        # SQLite helper class
│   │   │   │   ├── AddDataActivity.java       # Activity to add data
│   │   │   │   ├── ViewDataActivity.java      # Activity to view data
│   │   │   ├── res/
│   │   │   │   ├── layout/
│   │   │   │   │   ├── activity_main.xml      # Main layout
│   │   │   │   │   ├── activity_add_data.xml  # Layout for adding data
│   │   │   │   │   ├── activity_view_data.xml # Layout for viewing data
│   │   │   │   │   ├── item_data.xml          # Layout for individual data items


---

Code Implementation

1. Main Activity

Path: MainActivity.java

package com.example.localstorageapp;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        findViewById(R.id.btn_add_data).setOnClickListener(view -> {
            startActivity(new Intent(MainActivity.this, AddDataActivity.class));
        });

        findViewById(R.id.btn_view_data).setOnClickListener(view -> {
            startActivity(new Intent(MainActivity.this, ViewDataActivity.class));
        });
    }
}


---

2. Add Data Activity

Path: AddDataActivity.java

package com.example.localstorageapp;

import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;
import androidx.appcompat.app.AppCompatActivity;

public class AddDataActivity extends AppCompatActivity {
    private DatabaseHelper databaseHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_data);

        databaseHelper = new DatabaseHelper(this);

        findViewById(R.id.btn_save).setOnClickListener(view -> {
            String key = ((EditText) findViewById(R.id.edit_key)).getText().toString();
            String value = ((EditText) findViewById(R.id.edit_value)).getText().toString();

            if (key.isEmpty() || value.isEmpty()) {
                Toast.makeText(this, "Please enter both key and value", Toast.LENGTH_SHORT).show();
                return;
            }

            boolean isInserted = databaseHelper.insertData(key, value);
            if (isInserted) {
                Toast.makeText(this, "Data saved successfully", Toast.LENGTH_SHORT).show();
                finish();
            } else {
                Toast.makeText(this, "Failed to save data", Toast.LENGTH_SHORT).show();
            }
        });
    }
}


---

3. View Data Activity

Path: ViewDataActivity.java

package com.example.localstorageapp;

import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;
import java.util.List;

public class ViewDataActivity extends AppCompatActivity {
    private DatabaseHelper databaseHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_view_data);

        databaseHelper = new DatabaseHelper(this);

        RecyclerView recyclerView = findViewById(R.id.recycler_view);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        List<DataModel> dataList = databaseHelper.getAllData();
        DataAdapter adapter = new DataAdapter(dataList, databaseHelper);
        recyclerView.setAdapter(adapter);
    }
}


---

4. Database Helper

Path: DatabaseHelper.java

package com.example.localstorageapp;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import java.util.ArrayList;
import java.util.List;

public class DatabaseHelper extends SQLiteOpenHelper {
    private static final String DATABASE_NAME = "localdata.db";
    private static final String TABLE_NAME = "user_data";
    private static final String COL_KEY = "key_column";
    private static final String COL_VALUE = "value_column";

    public DatabaseHelper(Context context) {
        super(context, DATABASE_NAME, null, 1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("CREATE TABLE " + TABLE_NAME + " (id INTEGER PRIMARY KEY AUTOINCREMENT, " +
                   COL_KEY + " TEXT UNIQUE, " + COL_VALUE + " TEXT)");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
        onCreate(db);
    }

    public boolean insertData(String key, String value) {
        SQLiteDatabase db = this.getWritableDatabase();
        ContentValues contentValues = new ContentValues();
        contentValues.put(COL_KEY, key);
        contentValues.put(COL_VALUE, value);

        long result = db.insert(TABLE_NAME, null, contentValues);
        return result != -1;
    }

    public List<DataModel> getAllData() {
        SQLiteDatabase db = this.getReadableDatabase();
        Cursor cursor = db.rawQuery("SELECT * FROM " + TABLE_NAME, null);

        List<DataModel> dataList = new ArrayList<>();
        if (cursor.moveToFirst()) {
            do {
                dataList.add(new DataModel(cursor.getString(1), cursor.getString(2)));
            } while (cursor.moveToNext());
        }
        cursor.close();
        return dataList;
    }

    public void deleteData(String key) {
        SQLiteDatabase db = this.getWritableDatabase();
        db.delete(TABLE_NAME, COL_KEY + " = ?", new String[]{key});
    }
}


---

5. Data Adapter

Path: DataAdapter.java

package com.example.localstorageapp;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;
import java.util.List;

public class DataAdapter extends RecyclerView.Adapter<DataAdapter.DataViewHolder> {
    private final List<DataModel> dataList;
    private final DatabaseHelper databaseHelper;

    public DataAdapter(List<DataModel> dataList, DatabaseHelper databaseHelper) {
        this.dataList = dataList;
        this.databaseHelper = databaseHelper;
    }

    @NonNull
    @Override
    public DataViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_data, parent, false);
        return new DataViewHolder(view);
    }

    @Override
    public void onBindViewHolder(@NonNull DataViewHolder holder, int position) {
        DataModel data = dataList.get(position);
        holder.key.setText(data.getKey());
        holder.value.setText(data.getValue());

        holder.deleteButton.setOnClickListener(v -> {
            databaseHelper.deleteData(data.getKey());
            dataList.remove(position);
            notifyItemRemoved(position);
        });
    }

    @Override
    public int getItemCount() {
        return dataList.size();
    }

    static class DataViewHolder extends RecyclerView.ViewHolder {
        TextView key, value;
        Button deleteButton;

        public DataViewHolder(@NonNull View itemView) {
            super(itemView);
            key = itemView.findViewById(R.id.text_key);
            value = itemView.findViewById(R.id.text_value);
            deleteButton = itemView.findViewById(R.id.btn_delete);
        }
    }
}


